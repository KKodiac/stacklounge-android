version: "3.9"
volumes:
  mongodb-data:
    name: mongodb-data

services:
  mongodb:
    restart: always
    container_name: mongodb
    # image: seanhong2000/mongo # 도커 허브에 있는 이미지
    image: mongo
    restart: unless-stopped
    volumes:
      - mongodb-data:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    ports:
      - 27017:27017
    # healthcheck:
    #   test: echo 'db.runCommand("ping").ok' | mongo 10.10.10.60:27017/test --quiet
    #   interval: 30s
    #   timeout: 10s
    #   retries: 3

  mongo-express:
    restart: always
    # image: seanhong2000/mongo-express # 도커 허브에 있는 이미지
    image: mongo-express
    container_name: mongodb-express
    restart: unless-stopped
    environment:
      ME_CONFIG_MONGODB_SERVER: mongodb
      ME_CONFIG_MONGODB_ENABLE_ADMIN: "true"
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: admin123
    volumes:
      - mongodb-data:/data/db
    depends_on:
      - mongodb
    ports:
      - 8081:8081
  # healthcheck:
  #   test:  wget --quiet --tries=3 --spider http://admin:admin123@10.10.10.60:8081 || exit 1
  #   interval: 30s
  #   timeout: 10s
  #   retries: 3
  #   restart: unless-stopped
 
  spider_1:
    # image: seanhong2000/app # 도커 허브에 있는 이미지
    image: app
    build: .
    command: bash -c "cd stackspider && scrapy crawl programmersbot"
    volumes:
      - .:/backend
    depends_on: 
      - mongodb

  spider_2:
    # image: seanhong2000/app
    image: app
    build: .
    command: bash -c "cd stackspider && scrapy crawl jumpitbot"
    volumes:
      - .:/backend
    depends_on: 
      - mongodb


  spider_3:
    # image: seanhong2000/app
    image: app
    build: .
    command: bash -c "cd stackspider && scrapy crawl kiwizzlebot"
    volumes:
      - .:/backend
    depends_on: 
      - mongodb

  # 번역 자동화 할거면 이런식으로 할 생각이다.
  # translate:
  #   image: app
  #   build: .
  #   command: python translate.py
  #   volumes:
  #     - .:/backend
  #   depends_on: 
  #     - mongodb
  

  web:
    # image: seanhong2000/app
    restart: always
    image: app
    build: .
    command: bash -c "cd backend && python manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/backend
    environment:
      MONGOHOST: mongodb
      MONGODB: stackdb
      ME_CONFIG_MONGODB_ENABLE_ADMIN: "true"
      USERNAME: root
      PASSWORD: example
    ports:
      - "8000:8000"
    expose: 
      - "8000"
    depends_on:
      - mongodb

  # migration:
  #   build: .
  #   image: app
  #   command: python manage.py migrate
  #   volumes:
  #     - .:/StackLounge
  #   links:
  #     - mongodb
  #   depends_on:
  #     - make_migrations

  # make_migrations:
  #   build: .
  #   image: app
  #   command: python manage.py makemigrations
  #   volumes:
  #     - .:/StackLounge
  #   links:
  #     - mongodb
  #   depends_on:
  #     - mongodb